Source: node-signal-exit
Section: javascript
Priority: optional
Maintainer: Debian Javascript Maintainers <pkg-javascript-devel@lists.alioth.debian.org>
Uploaders: Sruthi Chandran <srud@disroot.org>
Build-Depends: debhelper-compat (= 13)
 , dh-sequence-nodejs
 , node-typescript
 , node-tap <!nocheck>
 , node-ts-node <!nocheck>
Standards-Version: 4.6.2
Vcs-Browser: https://salsa.debian.org/js-team/node-signal-exit
Vcs-Git: https://salsa.debian.org/js-team/node-signal-exit.git
Homepage: https://github.com/tapjs/signal-exit
Testsuite: autopkgtest-pkg-nodejs
Rules-Requires-Root: no

Package: node-signal-exit
Architecture: all
Depends: ${misc:Depends}
Multi-Arch: foreign
Breaks: node-execa (<< 6.1.0+dfsg1+~cs16.0.4-9~)
 , node-foreground-child (<< 3.1.1~)
 , node-gauge (<< 4.0.4-2~)
 , node-istanbul (<< 0.4.5+repack10+~cs98.25.59~)
 , node-lockfile (<< 1.0.4+~1.0.2-2~)
 , node-loud-rejection (<< 2.2.0-3~)
 , node-proper-lockfile (<< 4.1.2-4)
 , node-restore-cursor (<< 4.0.0-3~)
 , node-tap (<< 16.3.7+ds1+~cs50.9.19-2)
 , node-write-file-atomic (<< 4.0.2+~4.0.0-2)
Description: Fire an event no matter how a process exits
 When you want to fire an event no matter how a process exits:
    reaching the end of execution.
    explicitly having process.exit(code) called.
    having process.kill(pid, sig) called.
    receiving a fatal signal from outside the process
 .
 Node.js is an event-based server-side JavaScript engine.
